find.package("devtools")
install.packages("devtools")
library(devtools)
find.package("devtools")
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
source('~/Data_Science_Course/R-programming/ProgrammingAssignment2/cachematrix.R')
getwd()
setwd("C:/Users/dlynch/Documents/Data_Science_Course/R-programming/ProgrammingAssignment2")
getwd()
a <- matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
a
b <- makeCacheMatrix(a)
b$get()
b$getinv()
cacheSolve(b)
b$getinv()
source('~/Data_Science_Course/R-programming/ProgrammingAssignment2/cachematrix.R')
library(datasets)
data(iris)
iris
?itid
?iris
iris[,4]
iris[,1]
iris[,2]
iris[,3]
iris[,4]
iris[,5]
iris[1:5,5]
apply(iris[,1:4],2,mean)
mean(iris[,1])
vec <- iris[,4]
vec
vec <- iris[,5]
vec
vec2 <- vec[x == "virginica"]
apply(iris,2)
apply(iris,2,mean)
apply(iris[,1],2,mean)
vec <- iris$Species
vec
vec <- iris$Species == "virginica"
vec
val = iris[vec,]
val
val
colMean(val,2,mean)
colMeans(val,2,mean)
val
mean(val[1,])
val[1,]
mean(val[,1])
val
mean(val[,"Sepal.Length")
mean(val[,$Sepal.Length)
mean(val[,$Sepal.Length])
mean(val[,"Sepal.Length")]
library(datasets)
data(mtcars)
?mtcars
mtcars[1,]
mean(mtcars$mpg,mtcars$cyl)
mean(mtcars$mpg)
mean(mtcars$cyl)
apply(mtcars,2,mean)
with(mtcars,tapply(mpg,cyl,mean))
mtcars
vec
tapply(iris[1,],vec,mean)
iris[1,]
tapply(iris[,1],vec,mean)
with(mtcars,tapply(mpg,cyl,mean))
s<- split(iris, iris$Species)
s
lapply(s, function(x), colMeans(x[,c("Sepal.Length")]))
lapply(s, function(x) colMeans(x[,c("Sepal.Length")]))
lapply(s, function(x) colMeans(x[,c("Sepal.Length", "Sepal.Width")]))
tapply(mpg,cyl,mean)
with(mtcars,tapply(mpg,cyl,mean))
a <- with(mtcars,tapply(mpg,cyl,mean))
a
a[1,3]
a[1,2]
a[1]
a[,1]
length(a)
a$4
a[1]
a[3]
a[3]-a[1]
mtcars[1]
mtcars[1,]
a <- with(mtcars,tapply(hp,cyl,mean))
a
a[3]-a[1]
a[$8]-a[$4]
a$8-a$4
a$names
names(a)
a$"8"-a$"4"
a$"8"
a$'8'
attach(mtcars)
a <- tapply(hp,cyl,mean)
a
